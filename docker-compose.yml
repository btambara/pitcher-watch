services:
  redis:
    image: redis:7.2-bookworm
    container_name: pw_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 5s
      retries: 3
    volumes:
      - redis_volume:/data

  celery_worker_1:
    build:
      dockerfile: Dockerfile.worker
    container_name: pw-celery-worker-1
    command: ['celery', '-A', 'proj.celery', 'worker', '-l', 'info', '--concurrency=4']
    depends_on:
      redis:
        condition: service_healthy

  celery_worker_2:
    build:
      dockerfile: Dockerfile.worker
    container_name: pw-celery-worker-2
    command: ['celery', '-A', 'proj.celery', 'worker', '-l', 'info', '--concurrency=4']
    depends_on:
      redis:
        condition: service_healthy

  flower:
    image: mher/flower:master
    container_name: pw-flower
    command: celery --broker=redis://redis:6379 flower --port=5555
    ports:
      - "5555:5555"
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5555"]
      interval: 3s
      timeout: 10s
      retries: 5
    volumes:
      - flower_volume:/data
  api:
    build:
      dockerfile: Dockerfile.api
    container_name: pw-api
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8393/docs"]
      interval: 3s
      timeout: 10s
      retries: 5
    restart: always
    ports:
    - "8393:8393"
    volumes:
      - ./api:/api

  web:
    build:
      dockerfile: Dockerfile.web
    container_name: pw-web
    depends_on:
      api:
        condition: service_healthy
      db:
        condition: service_healthy
    restart: always
    ports:
    - "80:80"
    volumes:
      - ./dist:/usr/share/nginx/html

  db:
    image: postgres:16.2
    container_name: pw-postgres
    restart: always
    environment:
      POSTGRES_DB: pitchdb
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 3s
      timeout: 10s
      retries: 5
    volumes:
      - db_volume:/var/lib/postgresql/data

volumes:
  db_volume:
  redis_volume:
  flower_volume:
